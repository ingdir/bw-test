define(["require","cloud/cloudCtrl","cloud/cloudUI","stats/statsUI"],function(e){function s(e){var s=null;QUnit.test("Test data model",function(n){s=t.getData(e.topics,"burst"),n.equal(typeof s,"object","Created as Object");var r=t.getData(s,"burst");n.equal(typeof r,"object","Model can be created from a model"),n.notStrictEqual(s,r,"New model is not the old one"),n.equal(s.length,r.length,"Model lengths remain equal"),n.equal(s[0].label,"Mixes","First word comes up correctly in the 1st model"),n.strictEqual(s[0].label,r[0].label,"Same for the 2nd"),n.deepEqual(t.getMinMax(s),{min:0,max:60},"Min & max found correctly")}),QUnit.test("Cloud UI",function(e){var t=i.find(".b-cloud");n.init(t,s),e.equal(i.find(".b-cloud").length,1,"Cloud block created"),n.init(t,s),n.init(t,s),n.init(t,s),n.init(t,s),e.equal(i.find(".b-cloud").length,1,"Block can be created many times on the same mode"),e.equal(i.find(".b-cloud__word").length,s.length,"All words are rendered");var r=null;i.on("cloud:displayWordStats",function(t,n){e.equal(n.label,r,"OnClick data is broadcast properly")});var o=i.find(".b-cloud__word").eq(5);r=o.text(),o.click()}),QUnit.test("Stats UI",function(e){var t=i.find(".b-stats");r.init(t),e.equal(i.find(".b-stats").length,1,"Stats block created"),r.init(t,s),r.init(t,s),r.init(t,s),r.init(t,s),e.equal(i.find(".b-stats").length,1,"Block can be created many times on the same mode"),e.equal(i.find(".b-stats").hasClass("b-stats_empty"),!0,"Block content is initially hidden"),i.trigger("cloud:displayWordStats",{label:"Test",positive:42,negative:1,neutral:100500}),e.equal(t.find(".b-stats__word").text(),"Test","Label is set correctly"),e.equal(t.find(".b-stats__positive").text(),"42","Positive is set correctly"),e.equal(t.find(".b-stats__negative").text(),"1","Negative is set correctly"),e.equal(t.find(".b-stats__neutral").text(),"100500","Neutral is set correctly")})}var t=e("cloud/cloudCtrl"),n=e("cloud/cloudUI"),r=e("stats/statsUI"),i=$("#qunit-fixture");$.ajax({url:"/data/stats.json",dataType:"json"}).done(s)});